@use '../global/breakpoints' as *;
@use '../global/colors' as *;
@use '../global/fonts' as *;

// Breakpoint mixin
@mixin breakpoint($breakpoint, $direction: min) {
    
    //Check if the supplied breakpoint exists in our breakpoints map
    @if map-has-key($breakpoints, $breakpoint) { 
        $breakpoint-values: map-get($breakpoints, $breakpoint);
        $breakpoint-min: map-get($breakpoint-values, min);
        $breakpoint-max: map-get($breakpoint-values, max);

        //Check if we are writing styles for larger or smaller screens
        @if $direction == min {
            @media (min-width: $breakpoint-min) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint-max) {
                @content;
            }
        }
    
    // Use the custom value if the breakpoint is not part of the pre-defined list
    } @else {
        
        @if $direction == min {
            @media (min-width: $breakpoint) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint) {
                @content;
            }
        }
    }
}


// Font-Size mixin
@mixin font-size($size) {
    font-size: $size;
    font-size: rem($size);
}

// Padding mixin
@mixin padding($top, $right, $bottom, $left) {
    padding-top: $top;
    padding-right: $right;
    padding-bottom: $bottom;
    padding-left: $left;
}

// Margin mixin
@mixin margin($top, $right, $bottom, $left) {
    margin-top: $top;
    margin-right: $right;
    margin-bottom: $bottom;
    margin-left: $left;
}

// Flex-Container mixin
@mixin flex-container($direction,$align-items,$justify-content){
    display: flex;
    flex-direction: $direction;
    align-items: $align-items;
    justify-content: $justify-content;
    width: 100%;
}

@each $name,$value in $colors{
    .n-#{$name}{
        color: $value;
    }
  }

@each $name,$value in $font-family{
    .n-#{$name}{
        font-family: $value;
    }
}